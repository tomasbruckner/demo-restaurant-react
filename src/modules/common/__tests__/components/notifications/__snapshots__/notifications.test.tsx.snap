// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notifications basic example 1`] = `
.c1 {
  margin-right: 8px;
  font-size: 20px;
  line-height: 20px;
  height: 20px;
  opacity: 0.9;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<Notifications
  i18n={Object {}}
  notification={
    Object {
      "message": "notif",
      "variant": "success",
    }
  }
  removeNotificationAction={[Function]}
  t={[Function]}
  tReady={true}
>
  <WithStyles(ForwardRef(Snackbar))
    anchorOrigin={
      Object {
        "horizontal": "right",
        "vertical": "bottom",
      }
    }
    open={true}
  >
    <ForwardRef(Snackbar)
      anchorOrigin={
        Object {
          "horizontal": "right",
          "vertical": "bottom",
        }
      }
      classes={
        Object {
          "anchorOriginBottomCenter": "MuiSnackbar-anchorOriginBottomCenter",
          "anchorOriginBottomLeft": "MuiSnackbar-anchorOriginBottomLeft",
          "anchorOriginBottomRight": "MuiSnackbar-anchorOriginBottomRight",
          "anchorOriginTopCenter": "MuiSnackbar-anchorOriginTopCenter",
          "anchorOriginTopLeft": "MuiSnackbar-anchorOriginTopLeft",
          "anchorOriginTopRight": "MuiSnackbar-anchorOriginTopRight",
          "root": "MuiSnackbar-root",
        }
      }
      open={true}
    >
      <ClickAwayListener
        onClickAway={[Function]}
      >
        <div
          className="MuiSnackbar-root MuiSnackbar-anchorOriginBottomRight"
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onTouchEnd={[Function]}
        >
          <ForwardRef(Grow)
            appear={true}
            direction="up"
            in={true}
            onEnter={[Function]}
            onExited={[Function]}
            timeout={
              Object {
                "enter": 225,
                "exit": 195,
              }
            }
          >
            <Transition
              addEndListener={[Function]}
              appear={true}
              direction="up"
              enter={true}
              exit={true}
              in={true}
              mountOnEnter={false}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              timeout={
                Object {
                  "enter": 225,
                  "exit": 195,
                }
              }
              unmountOnExit={false}
            >
              <WithStyles(NotificationContent)
                direction="up"
                message="notif"
                onClose={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "transform": "scale(1, 1)",
                    "visibility": undefined,
                  }
                }
                variant="success"
              >
                <NotificationContent
                  classes={
                    Object {
                      "error": "NotificationContent-error-2",
                      "info": "NotificationContent-info-3",
                      "success": "NotificationContent-success-1",
                      "warning": "NotificationContent-warning-4",
                    }
                  }
                  direction="up"
                  message="notif"
                  onClose={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                      "transform": "scale(1, 1)",
                      "visibility": undefined,
                    }
                  }
                  variant="success"
                >
                  <WithStyles(ForwardRef(SnackbarContent))
                    action={
                      <ButtonComponent
                        aria-label="Close"
                        asIcon={true}
                        color="inherit"
                        onClick={[Function]}
                      >
                        <MdClose />
                      </ButtonComponent>
                    }
                    aria-describedby="idNotification"
                    className="NotificationContent-success-1"
                    message={
                      <ForwardRef(NotificationContent__NotificationMessage)
                        id="idNotification"
                      >
                        <ForwardRef(NotificationContent__NotificationIcon)>
                          <MdCheckCircle />
                        </ForwardRef(NotificationContent__NotificationIcon)>
                        notif
                      </ForwardRef(NotificationContent__NotificationMessage)>
                    }
                  >
                    <ForwardRef(SnackbarContent)
                      action={
                        <ButtonComponent
                          aria-label="Close"
                          asIcon={true}
                          color="inherit"
                          onClick={[Function]}
                        >
                          <MdClose />
                        </ButtonComponent>
                      }
                      aria-describedby="idNotification"
                      className="NotificationContent-success-1"
                      classes={
                        Object {
                          "action": "MuiSnackbarContent-action",
                          "message": "MuiSnackbarContent-message",
                          "root": "MuiSnackbarContent-root",
                        }
                      }
                      message={
                        <ForwardRef(NotificationContent__NotificationMessage)
                          id="idNotification"
                        >
                          <ForwardRef(NotificationContent__NotificationIcon)>
                            <MdCheckCircle />
                          </ForwardRef(NotificationContent__NotificationIcon)>
                          notif
                        </ForwardRef(NotificationContent__NotificationMessage)>
                      }
                    >
                      <WithStyles(ForwardRef(Paper))
                        aria-describedby="idNotification"
                        className="MuiSnackbarContent-root NotificationContent-success-1"
                        elevation={6}
                        role="alert"
                        square={true}
                      >
                        <ForwardRef(Paper)
                          aria-describedby="idNotification"
                          className="MuiSnackbarContent-root NotificationContent-success-1"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                          elevation={6}
                          role="alert"
                          square={true}
                        >
                          <div
                            aria-describedby="idNotification"
                            className="MuiPaper-root MuiSnackbarContent-root NotificationContent-success-1 MuiPaper-elevation6"
                            role="alert"
                          >
                            <div
                              className="MuiSnackbarContent-message"
                            >
                              <NotificationContent__NotificationMessage
                                id="idNotification"
                              >
                                <span
                                  className="c0"
                                  id="idNotification"
                                >
                                  <NotificationContent__NotificationIcon>
                                    <span
                                      className="c1"
                                    >
                                      <MdCheckCircle>
                                        <IconBase
                                          attr={
                                            Object {
                                              "viewBox": "0 0 24 24",
                                            }
                                          }
                                        >
                                          <svg
                                            fill="currentColor"
                                            height="1em"
                                            stroke="currentColor"
                                            strokeWidth="0"
                                            style={
                                              Object {
                                                "color": undefined,
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                            width="1em"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                              key="0"
                                            />
                                          </svg>
                                        </IconBase>
                                      </MdCheckCircle>
                                    </span>
                                  </NotificationContent__NotificationIcon>
                                  notif
                                </span>
                              </NotificationContent__NotificationMessage>
                            </div>
                            <div
                              className="MuiSnackbarContent-action"
                            >
                              <ButtonComponent
                                aria-label="Close"
                                asIcon={true}
                                color="inherit"
                                key="close"
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(IconButton))
                                  aria-label="Close"
                                  color="inherit"
                                  onClick={[Function]}
                                >
                                  <ForwardRef(IconButton)
                                    aria-label="Close"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit",
                                        "colorPrimary": "MuiIconButton-colorPrimary",
                                        "colorSecondary": "MuiIconButton-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "edgeEnd": "MuiIconButton-edgeEnd",
                                        "edgeStart": "MuiIconButton-edgeStart",
                                        "label": "MuiIconButton-label",
                                        "root": "MuiIconButton-root",
                                        "sizeSmall": "MuiIconButton-sizeSmall",
                                      }
                                    }
                                    color="inherit"
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      aria-label="Close"
                                      centerRipple={true}
                                      className="MuiIconButton-root MuiIconButton-colorInherit"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ForwardRef(ButtonBase)
                                        aria-label="Close"
                                        centerRipple={true}
                                        className="MuiIconButton-root MuiIconButton-colorInherit"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <button
                                          aria-label="Close"
                                          className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label"
                                          >
                                            <MdClose>
                                              <IconBase
                                                attr={
                                                  Object {
                                                    "viewBox": "0 0 24 24",
                                                  }
                                                }
                                              >
                                                <svg
                                                  fill="currentColor"
                                                  height="1em"
                                                  stroke="currentColor"
                                                  strokeWidth="0"
                                                  style={
                                                    Object {
                                                      "color": undefined,
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                  width="1em"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <path
                                                    d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    key="0"
                                                  />
                                                </svg>
                                              </IconBase>
                                            </MdClose>
                                          </span>
                                          <WithStyles(memo)
                                            center={true}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={true}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(IconButton)>
                                </WithStyles(ForwardRef(IconButton))>
                              </ButtonComponent>
                            </div>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                    </ForwardRef(SnackbarContent)>
                  </WithStyles(ForwardRef(SnackbarContent))>
                </NotificationContent>
              </WithStyles(NotificationContent)>
            </Transition>
          </ForwardRef(Grow)>
        </div>
      </ClickAwayListener>
    </ForwardRef(Snackbar)>
  </WithStyles(ForwardRef(Snackbar))>
</Notifications>
`;
